# Run the experiments from trace file
trace = "../../src/mapreduce/FB2010-1Hr-150-0.txt"

# Number of testcases to run
ncases = 500

# Number of map tasks and reduce tasks
# When running from trace, these parameters become scale factors
num_map = 1
num_reduce = 1
enable_computation_time = false

# Multiply the traffic size by a number
traffic_scale = 10.0

# Mapper placement policy
mapper_policy = { type = "Greedy" }

placement_strategy = { type = "Compact" }

# Output path of for the simulation results
directory = "/tmp/spectrum6/spectrum6_1"

# Whether to allow a mapper to collocate with a reduce
collocate = true

# Number of repeats for each batch of experiments
batch_repeat = 5

[[batch]]
reducer_policy = "Random"
probe = { enable = false }
# NetHint level, possible values are 0, 1, 2
nethint_level = 1

[[batch]]
reducer_policy = "HierarchicalGreedyLevel1"
probe = { enable = false }
nethint_level = 1

[[batch]]
reducer_policy = "HierarchicalGreedyPaper" # please use this
# reducer_policy = "HierarchicalGreedy"
probe = { enable = false }
nethint_level = 2

[[batch]]
reducer_policy = "HierarchicalGreedyPaper" # please use this
# reducer_policy = "HierarchicalGreedy"
probe = { enable = false }
nethint_level = 2
auto_fallback = true
alpha = 0.5

[simulator]
nethint = true
sample_interval_ns = 100_000_000 # 100ms
loopback_speed = 400
# possible values of fairness model are "PerFlowMaxMin", "PerVmPairMaxMin", and "TenantFlowMaxMin"
# fairness = "TenantFlowMaxMin"
fairness = "PerFlowMaxMin"

background_flow_hard = { enable = true, frequency_ns = 2_00_000_000, probability = 1.0, amplitude = 5, average_load = 0.1 }
# background_flow_hard = { enable = false }
# nethint_delay_ms = 100

[brain]
# Random seed for multiple uses
seed = 1
# Whether the cluster's bandwidth is asymmetric
asymmetric = false
# The percentage of nodes marked broken
broken = 0.1
# The slots of each physical machine
max_slots = 4
# how bandwidth is partitioned among multiple VMs in the same physical server, possible values are "RateLimited", "Guaranteed"
sharing_mode = "Guaranteed"
guaranteed_bandwidth = 25
background_flow_high_freq = { enable = true, probability = 1.0, amplitude = 10 }
# background_flow_high_freq = { enable = false }
gc_period = 100

# The topology for simulation
[brain.topology]
type = "Arbitrary"  # another possible value is "FatTree"

# [brain.topology.args] # When type = "FatTree"
# nports = 20           # the number of ports of a switch
# bandwidth = 100       # in Gbps
# oversub_ratio = 4.0   # oversubscription ratio

[brain.topology.args]         # When type = "Arbitrary"
nracks = 150        # the number of racks
rack_size = 18      # the number of hosts under a rack
host_bw = 100       # bandwidth of a host, in Gbps
rack_bw = 600       # bandwidth of a ToR switch, in Gbps

[envs]
NETHINT_SHOW_DECISION = "/tmp/spectrum6/spectrum6_1/decision.txt"
